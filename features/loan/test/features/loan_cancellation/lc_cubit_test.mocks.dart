// Mocks generated by Mockito 5.4.4 from annotations
// in loan/test/features/loan_cancellation/lc_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/config/error/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:loan/features/loan_cancellation/data/models/create_sr_request.dart'
    as _i17;
import 'package:loan/features/loan_cancellation/data/models/create_sr_response.dart'
    as _i16;
import 'package:loan/features/loan_cancellation/data/models/fetch_sr_request.dart'
    as _i11;
import 'package:loan/features/loan_cancellation/data/models/fetch_sr_response.dart'
    as _i10;
import 'package:loan/features/loan_cancellation/data/models/get_flp_tenure_response.dart'
    as _i13;
import 'package:loan/features/loan_cancellation/data/models/get_lc_list_request.dart'
    as _i8;
import 'package:loan/features/loan_cancellation/data/models/get_lc_list_response.dart'
    as _i7;
import 'package:loan/features/loan_cancellation/data/models/get_lc_reasons_response.dart'
    as _i9;
import 'package:loan/features/loan_cancellation/data/models/get_loan_charges_request.dart'
    as _i15;
import 'package:loan/features/loan_cancellation/data/models/get_loan_charges_response.dart'
    as _i14;
import 'package:loan/features/loan_cancellation/data/models/get_offers_response.dart'
    as _i12;
import 'package:loan/features/loan_cancellation/domain/repositories/lc_repository.dart'
    as _i2;
import 'package:loan/features/loan_cancellation/domain/usecases/lc_usecase.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoanCancellationRepository_0 extends _i1.SmartFake
    implements _i2.LoanCancellationRepository {
  _FakeLoanCancellationRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoanCancellationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoanCancellationUseCase extends _i1.Mock
    implements _i4.LoanCancellationUseCase {
  MockLoanCancellationUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LoanCancellationRepository get loanCancellationRepository =>
      (super.noSuchMethod(
        Invocation.getter(#loanCancellationRepository),
        returnValue: _FakeLoanCancellationRepository_0(
          this,
          Invocation.getter(#loanCancellationRepository),
        ),
      ) as _i2.LoanCancellationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.GetLoanCancellationResponse>> call(
          _i8.GetLoansCancellationRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.Failure, _i7.GetLoanCancellationResponse>>.value(
            _FakeEither_1<_i6.Failure, _i7.GetLoanCancellationResponse>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.GetLoanCancellationResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i9.GetLoanCancellationReasonsResponse>>
      getReasons() => (super.noSuchMethod(
            Invocation.method(
              #getReasons,
              [],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure,
                        _i9.GetLoanCancellationReasonsResponse>>.value(
                _FakeEither_1<_i6.Failure,
                    _i9.GetLoanCancellationReasonsResponse>(
              this,
              Invocation.method(
                #getReasons,
                [],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i6.Failure, _i9.GetLoanCancellationReasonsResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i10.FetchSrResponse>> fetchSR(
          _i11.FetchSrRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSR,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i10.FetchSrResponse>>.value(
                _FakeEither_1<_i6.Failure, _i10.FetchSrResponse>(
          this,
          Invocation.method(
            #fetchSR,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i10.FetchSrResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i12.GetOffersResponse>> getOffers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOffers,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i12.GetOffersResponse>>.value(
                _FakeEither_1<_i6.Failure, _i12.GetOffersResponse>(
          this,
          Invocation.method(
            #getOffers,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i12.GetOffersResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i13.GetFlpTenureResponse>>
      getFlpTenure() => (super.noSuchMethod(
            Invocation.method(
              #getFlpTenure,
              [],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure, _i13.GetFlpTenureResponse>>.value(
                _FakeEither_1<_i6.Failure, _i13.GetFlpTenureResponse>(
              this,
              Invocation.method(
                #getFlpTenure,
                [],
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.Failure, _i13.GetFlpTenureResponse>>);

  @override
  _i5.Future<
      _i3.Either<_i6.Failure, _i14.GetLoanChargesResponse>> getLoanCharges(
          _i15.GetLoanChargesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLoanCharges,
          [request],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, _i14.GetLoanChargesResponse>>.value(
            _FakeEither_1<_i6.Failure, _i14.GetLoanChargesResponse>(
          this,
          Invocation.method(
            #getLoanCharges,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i14.GetLoanChargesResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i16.CreateSrResponse>> createSR(
          _i17.CreateSrRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSR,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i16.CreateSrResponse>>.value(
                _FakeEither_1<_i6.Failure, _i16.CreateSrResponse>(
          this,
          Invocation.method(
            #createSR,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i16.CreateSrResponse>>);
}
