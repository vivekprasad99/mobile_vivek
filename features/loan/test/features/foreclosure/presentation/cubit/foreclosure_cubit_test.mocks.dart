// Mocks generated by Mockito 5.4.4 from annotations
// in loan/test/features/foreclosure/presentation/cubit/foreclosure_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/config/error/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:loan/features/foreclosure/data/models/create_fd_lead_response.dart'
    as _i14;
import 'package:loan/features/foreclosure/data/models/create_foreclosure_sr_response.dart'
    as _i15;
import 'package:loan/features/foreclosure/data/models/get_foreclosure_details.dart'
    as _i13;
import 'package:loan/features/foreclosure/data/models/get_loan_details_request.dart'
    as _i10;
import 'package:loan/features/foreclosure/data/models/get_loan_details_response.dart'
    as _i9;
import 'package:loan/features/foreclosure/data/models/get_loans_request.dart'
    as _i8;
import 'package:loan/features/foreclosure/data/models/get_loans_response.dart'
    as _i7;
import 'package:loan/features/foreclosure/data/models/get_offers_response.dart'
    as _i12;
import 'package:loan/features/foreclosure/data/models/get_reasons_response.dart'
    as _i11;
import 'package:loan/features/foreclosure/domain/repositories/foreclosure_repository.dart'
    as _i2;
import 'package:loan/features/foreclosure/domain/usecases/foreclosure_usecase.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeForeclosureRepository_0 extends _i1.SmartFake
    implements _i2.ForeclosureRepository {
  _FakeForeclosureRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ForeclosureUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForeclosureUseCase extends _i1.Mock
    implements _i4.ForeclosureUseCase {
  MockForeclosureUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ForeclosureRepository get foreclosureRepository => (super.noSuchMethod(
        Invocation.getter(#foreclosureRepository),
        returnValue: _FakeForeclosureRepository_0(
          this,
          Invocation.getter(#foreclosureRepository),
        ),
      ) as _i2.ForeclosureRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.GetLoansResponse>> call(
          _i8.GetLoansRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.GetLoansResponse>>.value(
                _FakeEither_1<_i6.Failure, _i7.GetLoansResponse>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.GetLoansResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i9.GetLoanDetailsResponse>>
      getLoanDetails(_i10.GetLoanDetailsRequest? params) => (super.noSuchMethod(
            Invocation.method(
              #getLoanDetails,
              [params],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure, _i9.GetLoanDetailsResponse>>.value(
                _FakeEither_1<_i6.Failure, _i9.GetLoanDetailsResponse>(
              this,
              Invocation.method(
                #getLoanDetails,
                [params],
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.Failure, _i9.GetLoanDetailsResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i11.GetReasonsResponse>> getReasons(
          _i10.GetLoanDetailsRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReasons,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i11.GetReasonsResponse>>.value(
                _FakeEither_1<_i6.Failure, _i11.GetReasonsResponse>(
          this,
          Invocation.method(
            #getReasons,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i11.GetReasonsResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i12.GetOffersResponse>> getOffers(
          _i10.GetLoanDetailsRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOffers,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i12.GetOffersResponse>>.value(
                _FakeEither_1<_i6.Failure, _i12.GetOffersResponse>(
          this,
          Invocation.method(
            #getOffers,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i12.GetOffersResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i13.GetForeClosureDetailsResponse>>
      getForeClosureDetails(_i10.GetLoanDetailsRequest? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #getForeClosureDetails,
              [params],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure,
                        _i13.GetForeClosureDetailsResponse>>.value(
                _FakeEither_1<_i6.Failure, _i13.GetForeClosureDetailsResponse>(
              this,
              Invocation.method(
                #getForeClosureDetails,
                [params],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i6.Failure, _i13.GetForeClosureDetailsResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i14.CreateFdLeadResponse>> createFDLead(
          _i10.GetLoanDetailsRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFDLead,
          [params],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, _i14.CreateFdLeadResponse>>.value(
            _FakeEither_1<_i6.Failure, _i14.CreateFdLeadResponse>(
          this,
          Invocation.method(
            #createFDLead,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i14.CreateFdLeadResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i15.CreateForeclosureSrResponse>>
      createForeclosureSR(_i10.GetLoanDetailsRequest? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #createForeclosureSR,
              [params],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure,
                        _i15.CreateForeclosureSrResponse>>.value(
                _FakeEither_1<_i6.Failure, _i15.CreateForeclosureSrResponse>(
              this,
              Invocation.method(
                #createForeclosureSR,
                [params],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i6.Failure, _i15.CreateForeclosureSrResponse>>);
}
