class GetThemeResponse {
  final String? code;
  final String? message;
  final String? theme;
  final String? mobileNumber;
  const GetThemeResponse({this.code , this.message , this.theme , this.mobileNumber });
  GetThemeResponse copyWith({String? code, String? message, String? theme, String? mobileNumber}){
    return GetThemeResponse(
        code:code ?? this.code,
        message:message ?? this.message,
        theme:theme ?? this.theme,
        mobileNumber:mobileNumber ?? this.mobileNumber
    );
  }

  Map<String,Object?> toJson(){
    return {
      'code': code,
      'message': message,
      'theme': theme,
      'mobileNumber': mobileNumber
    };
  }

  static GetThemeResponse fromJson(Map<String , Object?> json){
    return GetThemeResponse(
        code:json['code'] == null ? null : json['code'] as String,
        message:json['message'] == null ? null : json['message'] as String,
        theme:json['theme'] == null ? null : json['theme'] as String,
        mobileNumber:json['mobileNumber'] == null ? null : json['mobileNumber'] as String
    );
  }

  @override
  String toString(){
    return '''AutoGeneratedClassName(
                code:$code,
message:$message,
theme:$theme,
mobileNumber:$mobileNumber
    ) ''';
  }

  @override
  bool operator ==(Object other){
    return other is GetThemeResponse &&
        other.runtimeType == runtimeType &&
        other.code == code &&
        other.message == message &&
        other.theme == theme &&
        other.mobileNumber == mobileNumber;
  }

  @override
  int get hashCode {
    return Object.hash(
        runtimeType,
        code,
        message,
        theme,
        mobileNumber
    );
  }

}



