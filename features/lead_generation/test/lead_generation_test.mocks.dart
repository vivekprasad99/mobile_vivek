// Mocks generated by Mockito 5.4.4 from annotations
// in lead_generation/test/lead_generation_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/config/error/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:lead_generation/data/models/create_lead_generation_request.dart'
    as _i8;
import 'package:lead_generation/data/models/create_lead_generation_response.dart'
    as _i7;
import 'package:lead_generation/data/models/fetch_dealership_list_request.dart'
    as _i16;
import 'package:lead_generation/data/models/fetch_dealership_list_response.dart'
    as _i15;
import 'package:lead_generation/data/models/fetch_make_list_request.dart'
    as _i12;
import 'package:lead_generation/data/models/fetch_make_list_response.dart'
    as _i11;
import 'package:lead_generation/data/models/fetch_model_list_request.dart'
    as _i14;
import 'package:lead_generation/data/models/fetch_model_list_response.dart'
    as _i13;
import 'package:lead_generation/data/models/fetch_pin_code_request.dart'
    as _i10;
import 'package:lead_generation/data/models/fetch_pin_code_response.dart'
    as _i9;
import 'package:lead_generation/domain/repositories/lead_generation_repository.dart'
    as _i2;
import 'package:lead_generation/domain/usecases/lead_generation_usecase.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLeadGenerationRepository_0 extends _i1.SmartFake
    implements _i2.LeadGenerationRepository {
  _FakeLeadGenerationRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LeadGenerationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeadGenerationUseCase extends _i1.Mock
    implements _i4.LeadGenerationUseCase {
  MockLeadGenerationUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LeadGenerationRepository get leadGenerationRepository =>
      (super.noSuchMethod(
        Invocation.getter(#leadGenerationRepository),
        returnValue: _FakeLeadGenerationRepository_0(
          this,
          Invocation.getter(#leadGenerationRepository),
        ),
      ) as _i2.LeadGenerationRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.CreateLeadGenerationResponse>> call(
          _i8.LeadGenerationRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<
                _i3
                .Either<_i6.Failure, _i7.CreateLeadGenerationResponse>>.value(
            _FakeEither_1<_i6.Failure, _i7.CreateLeadGenerationResponse>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.CreateLeadGenerationResponse>>);

  _i5.Future<
      _i3.Either<_i6.Failure, _i9.FetchPinCodeResponse>> fetchPinCodeDetails(
          _i10.FetchPinCodeRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPinCodeDetails,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i9.FetchPinCodeResponse>>.value(
                _FakeEither_1<_i6.Failure, _i9.FetchPinCodeResponse>(
          this,
          Invocation.method(
            #fetchPinCodeDetails,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i9.FetchPinCodeResponse>>);

  _i5.Future<_i3.Either<_i6.Failure, _i11.FetchMakeListResponse>> fetchMakeList(
          _i12.FetchMakeListRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMakeList,
          [params],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, _i11.FetchMakeListResponse>>.value(
            _FakeEither_1<_i6.Failure, _i11.FetchMakeListResponse>(
          this,
          Invocation.method(
            #fetchMakeList,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i11.FetchMakeListResponse>>);

  _i5.Future<
      _i3.Either<_i6.Failure, _i13.FetchModelListResponse>> fetchModelList(
          _i14.FetchModelListRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchModelList,
          [params],
        ),
        returnValue: _i5
            .Future<_i3.Either<_i6.Failure, _i13.FetchModelListResponse>>.value(
            _FakeEither_1<_i6.Failure, _i13.FetchModelListResponse>(
          this,
          Invocation.method(
            #fetchModelList,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i13.FetchModelListResponse>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i15.FetchDealershipListResponse>>
      fetchDealershipList(_i16.FetchDealershipListRequest? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchDealershipList,
              [params],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure,
                        _i15.FetchDealershipListResponse>>.value(
                _FakeEither_1<_i6.Failure, _i15.FetchDealershipListResponse>(
              this,
              Invocation.method(
                #fetchDealershipList,
                [params],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i6.Failure, _i15.FetchDealershipListResponse>>);
}
